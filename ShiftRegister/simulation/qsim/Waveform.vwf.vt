// Copyright (C) 2023  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "11/27/2023 11:05:30"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          ShiftRegister
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module ShiftRegister_vlg_vec_tst();
// constants                                           
// general purpose registers
reg Clock;
reg Reset;
reg Select;
reg Serial;
// wires                                               
wire pin_name1;
wire pin_name2;
wire pin_name3;
wire pin_name4;
wire pin_name5;
wire pin_name6;
wire pin_name7;
wire pin_name8;
wire pin_name9;
wire S;
wire T;
wire U;
wire V;
wire W;
wire X;
wire Y;
wire Z;

// assign statements (if any)                          
ShiftRegister i1 (
// port map - connection between master ports and signals/registers   
	.Clock(Clock),
	.pin_name1(pin_name1),
	.pin_name2(pin_name2),
	.pin_name3(pin_name3),
	.pin_name4(pin_name4),
	.pin_name5(pin_name5),
	.pin_name6(pin_name6),
	.pin_name7(pin_name7),
	.pin_name8(pin_name8),
	.pin_name9(pin_name9),
	.Reset(Reset),
	.S(S),
	.Select(Select),
	.Serial(Serial),
	.T(T),
	.U(U),
	.V(V),
	.W(W),
	.X(X),
	.Y(Y),
	.Z(Z)
);
initial 
begin 
#1000000 $finish;
end 

// Clock
always
begin
	Clock = 1'b0;
	Clock = #20000 1'b1;
	#20000;
end 

// Reset
initial
begin
	Reset = 1'b1;
	# 1000;
	repeat(2)
	begin
		Reset = 1'b0;
		Reset = #396000 1'b1;
		# 4000;
	end
	Reset = 1'b0;
end 

// Serial
initial
begin
	Serial = 1'b0;
	Serial = #20000 1'b1;
	Serial = #20000 1'b0;
	Serial = #40000 1'b1;
	Serial = #40000 1'b0;
	Serial = #40000 1'b1;
	Serial = #20000 1'b0;
	Serial = #40000 1'b1;
	Serial = #20000 1'b0;
	Serial = #20000 1'b1;
	Serial = #40000 1'b0;
	Serial = #40000 1'b1;
	Serial = #60000 1'b0;
	Serial = #20000 1'b1;
	Serial = #40000 1'b0;
	Serial = #40000 1'b1;
	Serial = #40000 1'b0;
	Serial = #80000 1'b1;
	Serial = #60000 1'b0;
	Serial = #20000 1'b1;
	Serial = #40000 1'b0;
	Serial = #40000 1'b1;
	Serial = #80000 1'b0;
	Serial = #20000 1'b1;
	Serial = #20000 1'b0;
	Serial = #40000 1'b1;
	Serial = #20000 1'b0;
	Serial = #20000 1'b1;
end 

// Select
initial
begin
	repeat(2)
	begin
		Select = 1'b0;
		Select = #396000 1'b1;
		# 4000;
	end
	Select = 1'b0;
end 
endmodule

