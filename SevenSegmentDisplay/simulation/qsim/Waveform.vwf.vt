// Copyright (C) 2023  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "12/01/2023 10:44:31"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          SevenSegmentDisplay
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module SevenSegmentDisplay_vlg_vec_tst();
// constants                                           
// general purpose registers
reg pin_name1;
// wires                                               
wire A_out;
wire A_out2;
wire B_out;
wire B_out2;
wire C_out;
wire C_out2;
wire D_out;
wire D_out2;
wire E_out;
wire E_out2;
wire F_out;
wire F_out2;
wire G_out;
wire G_out2;
wire pin_name2;
wire pin_name3;
wire pin_name4;
wire pin_name5;
wire pin_name6;
wire pin_name7;
wire pin_name8;
wire pin_name9;

// assign statements (if any)                          
SevenSegmentDisplay i1 (
// port map - connection between master ports and signals/registers   
	.A_out(A_out),
	.A_out2(A_out2),
	.B_out(B_out),
	.B_out2(B_out2),
	.C_out(C_out),
	.C_out2(C_out2),
	.D_out(D_out),
	.D_out2(D_out2),
	.E_out(E_out),
	.E_out2(E_out2),
	.F_out(F_out),
	.F_out2(F_out2),
	.G_out(G_out),
	.G_out2(G_out2),
	.pin_name1(pin_name1),
	.pin_name2(pin_name2),
	.pin_name3(pin_name3),
	.pin_name4(pin_name4),
	.pin_name5(pin_name5),
	.pin_name6(pin_name6),
	.pin_name7(pin_name7),
	.pin_name8(pin_name8),
	.pin_name9(pin_name9)
);
initial 
begin 
#1000000 $finish;
end 

// pin_name1
always
begin
	pin_name1 = 1'b0;
	pin_name1 = #10000 1'b1;
	#10000;
end 
endmodule

