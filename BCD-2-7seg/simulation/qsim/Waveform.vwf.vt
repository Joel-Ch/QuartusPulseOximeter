// Copyright (C) 2023  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "11/09/2023 09:34:56"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          BCD_2_7seg
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module BCD_2_7seg_vlg_vec_tst();
// constants                                           
// general purpose registers
reg S_in;
reg T_in;
reg U_in;
reg V_in;
reg W_in;
reg X_in;
reg Y_in;
reg Z_in;
// wires                                               
wire A_out;
wire A_out2;
wire B_out;
wire B_out2;
wire C_out;
wire C_out2;
wire D_out;
wire D_out2;
wire E_out;
wire E_out2;
wire F_out;
wire F_out2;
wire G_out;
wire G_out2;

// assign statements (if any)                          
BCD_2_7seg i1 (
// port map - connection between master ports and signals/registers   
	.A_out(A_out),
	.A_out2(A_out2),
	.B_out(B_out),
	.B_out2(B_out2),
	.C_out(C_out),
	.C_out2(C_out2),
	.D_out(D_out),
	.D_out2(D_out2),
	.E_out(E_out),
	.E_out2(E_out2),
	.F_out(F_out),
	.F_out2(F_out2),
	.G_out(G_out),
	.G_out2(G_out2),
	.S_in(S_in),
	.T_in(T_in),
	.U_in(U_in),
	.V_in(V_in),
	.W_in(W_in),
	.X_in(X_in),
	.Y_in(Y_in),
	.Z_in(Z_in)
);
initial 
begin 
#1000000 $finish;
end 

// W_in
initial
begin
	repeat(3)
	begin
		W_in = 1'b0;
		W_in = #160000 1'b1;
		# 160000;
	end
	W_in = 1'b0;
end 

// X_in
initial
begin
	repeat(6)
	begin
		X_in = 1'b0;
		X_in = #80000 1'b1;
		# 80000;
	end
	X_in = 1'b0;
end 

// Y_in
initial
begin
	repeat(12)
	begin
		Y_in = 1'b0;
		Y_in = #40000 1'b1;
		# 40000;
	end
	Y_in = 1'b0;
end 

// Z_in
always
begin
	Z_in = 1'b0;
	Z_in = #20000 1'b1;
	#20000;
end 

// S_in
initial
begin
	repeat(3)
	begin
		S_in = 1'b0;
		S_in = #160000 1'b1;
		# 160000;
	end
	S_in = 1'b0;
end 

// T_in
initial
begin
	repeat(6)
	begin
		T_in = 1'b0;
		T_in = #80000 1'b1;
		# 80000;
	end
	T_in = 1'b0;
end 

// U_in
initial
begin
	repeat(12)
	begin
		U_in = 1'b0;
		U_in = #40000 1'b1;
		# 40000;
	end
	U_in = 1'b0;
end 

// V_in
always
begin
	V_in = 1'b0;
	V_in = #20000 1'b1;
	#20000;
end 
endmodule

